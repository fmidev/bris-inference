[build-system]
requires = ["setuptools>=61", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "bris"
authors = [
    {name = "Magnus Sikora Ingstad", email = "magnusi@met.no"},
    {name = "Aram Salihi", email = "arams@met.no"},
    {name = "Thomas Nipen", email = "thomasn@met.no"},
    {name = "HÃ¥vard H. Haugen", email = "havardhh@met.no"}
]
description = "Package for running inference of Anemoi models"
keywords = ["meteorology", "forecast", ]
license = { file = "LICENSE" }
readme = "README.md"

requires-python = ">=3.9"
classifiers = [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
    ]
dependencies = [
    "anemoi-datasets>=0.5.13",  # This includes the reorder functionality
    "argparse",
    "cfunits",
    "gridpp",
    "hydra-core",
    "numpy",
    "omegaconf",
    "pyproj",
    "pytorch-lightning>=2.1",
    "scipy",
    "torch",
    "torch_geometric",
    "torchinfo",
    "tqdm",
    "verif",
    "zarr<=2.17",
    "anemoi-models",
    "anemoi-training>=0.1.0",
]

# legacy version supports this branch from MetNo fork of ECMWF anemoi-models
# contains some optimizations and fixes 
optional-dependencies.legacy = [
    "anemoi-models @ git+https://github.com/metno/anemoi-models.git@feature/fix-memory-inference-chunking",
    #"aifs @ git+ssh://git@github.com/metno/aifs-mono.git@production",
]

optional-dependencies.tests = [
    "tox",
]
dynamic = ["version"]

[tool.setuptools]
# Any setuptools-specific configuration (e.g., package data, entry points) goes here
include-package-data = true

[tool.setuptools.packages.find]
include = ["bris"]

[tool.setuptools.dynamic]
version = {attr = "bris.__version__"}

[tool.setuptools.package-data]
bris = ["schema/*.json"]

[project.scripts]
bris = "bris:main"
